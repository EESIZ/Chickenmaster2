---
description: 
globs: 
alwaysApply: true
---
---
description: This file defines the architecture rules for the project.
globs: 
alwaysApply: ture
---

Architecture Guidelines
Hexagonal Architecture
core/domain: Core domain logic (immutable).

core/ports: Interface definitions.

adapters: Connections to external systems.

application: Application services.

Dependency Rules
core/domain should not depend on other layers.

adapters depend only on core/domain.

application can depend on all layers.

Domain Objects
All domain objects must be immutable.

Use @dataclass(frozen=True) for immutability.

Value objects should use immutable collections.

Port Interfaces
All ports should be tagged with @freeze.

Define clear and concise interfaces.

Hide implementation details.

Event Engine
Events should be immutable objects.

The effects of events are subject to trade-offs.

Chain effects should be implemented in a predictable manner.

Economic System
Pricing, demand, and cost calculations should be handled by domain services.

Inventory management should be done using immutable objects.

Profit and loss calculations should be pure functions.